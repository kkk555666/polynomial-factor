import streamlit as st
import sympy as sp

st.set_page_config(page_title="‡πÅ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏û‡∏´‡∏∏‡∏ô‡∏≤‡∏°", layout="centered")
x = sp.symbols('x')

if "poly_input" not in st.session_state:
    st.session_state.poly_input = ""

st.title("üßÆ ‡πÅ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏û‡∏´‡∏∏‡∏ô‡∏≤‡∏°")
st.markdown("‡πÉ‡∏™‡πà‡∏û‡∏´‡∏∏‡∏ô‡∏≤‡∏° (‡πÄ‡∏ä‡πà‡∏ô `x^2+5*x+6`)")

input_str = st.session_state.poly_input

def add_text(t):
    st.session_state.poly_input += t

def backspace():
    st.session_state.poly_input = st.session_state.poly_input[:-1]

def clear_input():
    st.session_state.poly_input = ""

input_str = st.text_input("‡∏û‡∏´‡∏∏‡∏ô‡∏≤‡∏°", value=st.session_state.poly_input, key="poly_input")

button_rows = [
    ['7', '8', '9', '‡∏ö‡∏ß‡∏Å', '‡∏•‡∏ö'],
    ['4', '5', '6', '‡∏Ñ‡∏π‡∏ì', '‡∏´‡∏≤‡∏£'],
    ['1', '2', '3', 'x', '^'],
    ['0', '(', ')', '‚å´', '‡∏•‡πâ‡∏≤‡∏á']
]

symbol_map = {
    '‡∏ö‡∏ß‡∏Å': '+',
    '‡∏•‡∏ö': '-',
    '‡∏Ñ‡∏π‡∏ì': '*',
    '‡∏´‡∏≤‡∏£': '/',
}

cols = st.columns(5)
for i, btn in enumerate(sum(button_rows, [])):
    if cols[i % 5].button(btn, key=f"btn_{btn}_{i}"):
        if btn == '‚å´':
            backspace()
        elif btn == '‡∏•‡πâ‡∏≤‡∏á':
            clear_input()
        else:
            add_text(symbol_map.get(btn, btn))

if st.button("‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö"):
    expr_str = st.session_state.poly_input.replace("^", "**").replace(" ", "")
    try:
        expr = sp.sympify(expr_str, locals={'x': x})
        if expr.free_symbols != {x} and expr.free_symbols != set():
            st.error("‚ùå ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ x ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
        else:
            degree = sp.degree(expr, x)
            if degree is None or degree < 2 or degree > 10:
                st.warning("‚ö†Ô∏è ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏î‡∏µ‡∏Å‡∏£‡∏µ 2 ‡∏ñ‡∏∂‡∏á 10 ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
            else:
                result = sp.factor(expr)
                st.success("‚úÖ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö:")
                st.code(str(result))
    except Exception as e:
        st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

